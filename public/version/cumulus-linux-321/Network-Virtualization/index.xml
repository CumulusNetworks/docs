<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network Virtualization on Cumulus Networks Documentation</title>
    <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/</link>
    <description>Recent content in Network Virtualization on Cumulus Networks Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrating with VMware NSX</title>
      <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Integrating-with-VMware-NSX/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Integrating-with-VMware-NSX/</guid>
      <description>Switches running Cumulus Linux can integrate with VMware NSX to act as VTEP gateways. The VMware NSX controller provides consistent provisioning across virtual and physical server infrastructures.
Getting Started Before you integrate VXLANs with NSX, make sure you have the following components:
 A switch (L2 gateway) with a Tomahawk, Trident II+ or Trident II chipset running Cumulus Linux
 OVSDB server (ovsdb-server), included in Cumulus Linux
 VTEPd (ovs-vtepd), included in Cumulus Linux</description>
    </item>
    
    <item>
      <title>Integrating Hardware VTEPs with Midokura MidoNet and OpenStack</title>
      <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Integrating-Hardware-VTEPs-with-Midokura-MidoNet-and-OpenStack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Integrating-Hardware-VTEPs-with-Midokura-MidoNet-and-OpenStack/</guid>
      <description>Cumulus Linux seamlessly integrates with the MidoNet OpenStack infrastructure, where the switches provide the VTEP gateway for terminating VXLAN tunnels from within MidoNet. MidoNet connects to the OVSDB server running on the Cumulus Linux switch, and exchanges information about the VTEPs and MAC addresses associated with the OpenStack Neutron networks. This provides seamless Ethernet connectivity between virtual and physical server infrastructures.
Getting Started Before you create VXLANs with MidoNet, make sure you have the following components:</description>
    </item>
    
    <item>
      <title>Static MAC Bindings with VXLAN</title>
      <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Static-MAC-Bindings-with-VXLAN/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Static-MAC-Bindings-with-VXLAN/</guid>
      <description>Cumulus Linux includes native Linux VXLAN kernel support.
Requirements A VXLAN configuration requires a switch with a Broadcom Tomahawk, Trident II+ or Trident II chipset running Cumulus Linux 2.0 or later, or a Mellanox Spectrum chipset running Cumulus Linux 3.2.0 or later.
For a basic VXLAN configuration, you should ensure that:
 The VXLAN has a network identifier (VNI); do not use 0 or 16777215 as the VNI ID, as they are reserved values under Cumulus Linux.</description>
    </item>
    
    <item>
      <title>Ethernet Virtual Private Network - EVPN</title>
      <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Ethernet-Virtual-Private-Network-EVPN/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Ethernet-Virtual-Private-Network-EVPN/</guid>
      <description>EVPN requires Cumulus Linux version 3.2.1 or newer.
 Only VNI values less than 65535 are supported.
 Ethernet Virtual Private Network (EVPN) provides a control plane for VXLANs in Cumulus Linux, with the following functionality:
 VNI membership exchange between VTEPs using the EVPN type-3 (Inclusive Multicast Ethernet Tag) route.
 Exchange of MACs learned on local bridge ports using the EVPN type-2 (MAC/IP Advertisement) route.
 Support for MAC mobility through exchange of the MAC Mobility Extended community.</description>
    </item>
    
    <item>
      <title>VXLAN Hyperloop</title>
      <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/VXLAN-Hyperloop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/VXLAN-Hyperloop/</guid>
      <description>This chapter covers configuring VXLAN gateways using a loopback cable (which we call a hyperloop) on non-RIOT (VXLAN routing) capable ASICs running Cumulus Linux.
The Broadcom Trident II and Tomahawk ASICs have a limitation where a L2 bridge that contains a VXLAN interface can not also have an IP address assigned to it. This is an expected limitation with this ASIC, because of the ordering of the decapsulation. A packet that is decapsulated will already have passed the portion of the ASIC capable of reading the IP address lookup (for example, VXLAN lookup happens before IP address lookup).</description>
    </item>
    
    <item>
      <title>Static VXLAN Tunnels</title>
      <link>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Static-VXLAN-Tunnels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>docs.cumulusnetworks.com/version/cumulus-linux-321/Network-Virtualization/Static-VXLAN-Tunnels/</guid>
      <description>In VXLAN-based networks, there are a range of complexities and challenges in determining the destination virtual tunnel endpoints (VTEPs) for any given VXLAN. At scale, various solutions, including Lightweight Network Virtualization (LNV), controller-based options like Midokura MidoNet or VMware NSX and even new standards like EVPN are attempts to address these complexities, however do retain their own complexities.
Enter static VXLAN tunnels, which simply serve to connect two VTEPs in a given environment.</description>
    </item>
    
  </channel>
</rss>